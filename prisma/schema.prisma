generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model flow {
  year    Int?
  month   Int?
  income  Decimal? @db.Decimal(10, 2)
  expense Decimal? @db.Decimal(10, 2)

  @@ignore
}

model label {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(255)
  user_id     Int?
  user        user?         @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_LABEL_USER")
  transaction transaction[]

  @@index([user_id], map: "FK_LABEL_USER_idx")
}

model transaction {
  tran_id           Int                @id @default(autoincrement())
  user_id           Int?
  hashcode          String             @db.VarChar(255)
  tran_group_id     Int?
  label_id          Int?
  created_at        DateTime?          @default(now()) @db.Timestamp(0)
  amount            Decimal?           @db.Decimal(10, 2)
  transaction_date  DateTime?          @default(now()) @db.DateTime(0)
  customer_notes    String?            @db.VarChar(60)
  balance           Decimal?           @default(0.00) @db.Decimal(10, 2)
  user              user?              @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "transaction_ibfk_1")
  transaction_group transaction_group? @relation(fields: [tran_group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "transaction_ibfk_2")
  label             label?             @relation(fields: [label_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "transaction_ibfk_3")

  @@index([label_id], map: "label_id")
  @@index([tran_group_id], map: "tran_group_id")
  @@index([user_id], map: "user_id")
}

model transaction_group {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(255)
  type_id     Int?
  user_id     Int?
  transaction transaction[]
  type        type?         @relation(fields: [type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "transaction_group_ibfk_1")
  user        user?         @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "transaction_group_ibfk_2")

  @@index([type_id], map: "type_id")
  @@index([user_id], map: "user_id")
}

model type {
  id                Int                 @id @default(autoincrement())
  name              String              @db.VarChar(255)
  transaction_group transaction_group[]
}

model user {
  user_id           Int                 @id @default(autoincrement())
  username          String              @db.VarChar(255)
  dob               DateTime?           @db.Date
  email             String              @db.VarChar(255)
  password          String              @db.VarChar(255)
  Mstatus           String?             @db.VarChar(50)
  active            Boolean?            @default(true)
  label             label[]
  transaction       transaction[]
  transaction_group transaction_group[]
}
